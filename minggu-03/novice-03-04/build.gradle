/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
}

apply plugin: 'java'
apply plugin: 'war'
apply from: 'https://raw.github.com/gretty-gradle-plugin/gretty/master/pluginScripts/gretty.plugin'
apply plugin: 'eclipse'


repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()  
    mavenLocal()
    flatDir {
       dirs 'libs'
   }  
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:27.0.1-jre'
    // testCompile 'org.mockito:mockito-core:2.7.19'
    // testCompile 'io.github.bonigarcia:webdrivermanager:1.6.1' 
    // testCompile 'org.seleniumhq.selenium:selenium-java:3.3.1' 

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    compile fileTree(dir: 'libs', includes: ['*.jar'])    
    compile "javax.ws.rs:javax.ws.rs-api:2.0.1"
    providedCompile "javax.servlet:javax.servlet-api:3.1.0" 
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.14'
}

test {
    exclude '**/*IntegrationTest*'
}

// Define the main class for the application
//mainClassName = 'jersey.coba.App'

task integrationTest(type: Test) {
    include '**/*IntegrationTest*'
    doFirst {
         jettyRun.httpPort = 8080    // Port for test
         jettyRun.daemon = true
         jettyRun.execute()
    }

    // tasks.whenTaskAdded { task ->
    //     if (task.name == 'jettyRun') {
    //     task.dependsOn 'integrationTest'
    //     }
    // }

    doLast {
        jettyStop.stopPort = 8091   // Port for stop signal
        jettyStop.stopKey = 'stopKey'
        jettyStop.execute()
        print "hello"
    }
}